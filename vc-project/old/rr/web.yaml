apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx-deployment-error-page
spec:
  selector:
    matchLabels:
      app: error-page  
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: error-page
        version: v1
    spec:
      containers:
      - name: nginx-error-page
        image: kkisilevsky/nginx_error_page
        ports:
        - containerPort: 80
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: web-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "booking.cloud-nation.club"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: bookinfo
spec:
  hosts:
  - "booking.cloud-nation.club"
  gateways:
  - web-gateway
  http:
  - match:
    - port: 80
    route:
    - destination:
        host: error-page-svc
        subset: v1
        port:
          number: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: error-page-svc
  namespace: sas
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 80
  selector:
    app: error-page
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: error-page-rule
spec:
  host: error-page-svc.sas.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
  - name: v1
    labels:
      version: v1
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: gateway
#   annotations:
#     kubernetes.io/ingress.class: "istio"
# spec:
# #   tls:
# #     - hosts: 
# #       - webstore-platform.dev.govirto.com
# #       secretName: webstore-platform-tls
#   rules:
#   - host: booking.cloud-nation.club
#     http:
#       paths:
#       - backend:
#           serviceName: error-page
#           servicePort: 80
#         path: /