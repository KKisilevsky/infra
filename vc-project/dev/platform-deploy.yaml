apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: platform
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "myapp"
        vault.hashicorp.com/agent-inject-secret-db: "secret_dev/mssql"
        vault.hashicorp.com/agent-inject-template-db: |
          {{- with secret "secret_dev/mssql" -}}
          export ConnectionStrings__VirtoCommerce="Server=tcp:mssql-deployment,1433;;Initial Catalog=VirtoCommerce3docker;Persist Security Info=True;User ID=sa;Password={{ .Data.data.SA_PASSWORD }};MultipleActiveResultSets=False;Connect Timeout=120"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-redis: "secret_dev/redis"
        vault.hashicorp.com/agent-inject-template-redis: |
          {{- with secret "secret_dev/redis" -}}
          export ConnectionStrings__RedisConnectionString="redis-master.redis:6379,password={{ .Data.data.REDIS_PASS }},ssl=False,abortConnect=False"
          {{- end }}
        configHash: ""
      labels:
        app: platform
    spec:
      serviceAccountName: app
      initContainers:
        - name: init-platform
          image: kkisilevsky/platform-installer
          command:
            - "/bin/bash"
            - "-c"
          args:
            - "python3 install-modules.py $(VC_PLATFORM_MODULES_CONFIG) /opt/virtocommerce/platform/Modules/ ;
            rm -rf $(ELECTRONICS_THEME_LOCATION)/* && ./install-theme.sh $(ELECTRONICS_THEME_URL) $(ELECTRONICS_THEME_LOCATION);
            rm -rf $(B2B_THEME_LOCATION)/* && ./install-theme.sh $(B2B_THEME_URL) $(B2B_THEME_LOCATION);
            ./upload-assets.sh $(ASSETS_URL) $(ASSETS_LOCATION);"
            #echo $(APP_CONFIG) > modules.json && cat modules.json"
          env:
            - name: VC_PLATFORM_MODULES_CONFIG
              value: https://raw.githubusercontent.com/VirtoCommerce/vc-deploy-apps/master/rba-app/overlays/dev/modules.json?BA2F41C0D1FD486CB031B79A2573693E35BA60C8F2686C5863B9DC9D340E4A9C
            - name: ELECTRONICS_THEME_URL
              value: https://vc3prerelease.blob.core.windows.net/packages/vc-theme-default-2.1.11.zip
            - name: ELECTRONICS_THEME_LOCATION
              value: /opt/virtocommerce/platform/wwwroot/cms-content/Themes/Electronics/default
            - name: B2B_THEME_URL
              value: https://github.com/VirtoCommerce/vc-theme-b2b/releases/download/3.0.7/vc-b2b-theme-3.0.7.zip
            - name: B2B_THEME_LOCATION
              value: /opt/virtocommerce/platform/wwwroot/cms-content/Themes/B2B-store/default
            - name: ASSETS_URL
              value: https://vcbacpac.blob.core.windows.net/dac-packages/rba_assets.zip
            - name: ASSETS_LOCATION
              value: /opt/virtocommerce/platform/wwwroot/cms-content/assets
            - name: APP_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: modules-cm
                  key: modules.json
            - name: CONFIG_HASH
              valueFrom:
                  fieldRef:
                    fieldPath: spec.template.metadata.annotations.configHash 
          volumeMounts:
            - mountPath: /opt/virtocommerce/platform/Modules
              name: modules-data
            - mountPath: /opt/virtocommerce/platform/wwwroot/cms-content
              name: cms-content-data
      containers:
      - name: vc-platform-web      
        image: kkisilevsky/platform-dev
        command:
          - "/bin/bash"
          - "-c"
        args:
          - "cat /vault/secrets/db >> /vault/secrets/config;
            cat /vault/secrets/redis >> /vault/secrets/config;
            source /vault/secrets/config && dotnet VirtoCommerce.Platform.Web.dll" 
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/opt/virtocommerce/platform/wwwroot/cms-content"
          name: cms-content-data
        - mountPath: "/opt/virtocommerce/platform/Modules"
          name: modules-data
        env:  
        - name: APP_CONFIG
          valueFrom:
            configMapKeyRef:
              name: modules-cm
              key: modules.json      
      volumes:
      - name: cms-content-data
        persistentVolumeClaim:
          claimName: cms-pv-volume
      - name: modules-data
        persistentVolumeClaim:
          claimName: modules-pv-volume     
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app
  labels:
    app: platform